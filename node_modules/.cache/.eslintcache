[{"/Users/hyeonholee/study/react-netfilx/src/index.js":"1","/Users/hyeonholee/study/react-netfilx/src/reportWebVitals.js":"2","/Users/hyeonholee/study/react-netfilx/src/App.js":"3","/Users/hyeonholee/study/react-netfilx/src/components/Nav.js":"4","/Users/hyeonholee/study/react-netfilx/src/components/Banner.js":"5","/Users/hyeonholee/study/react-netfilx/src/api/requests.js":"6","/Users/hyeonholee/study/react-netfilx/src/api/axios.js":"7","/Users/hyeonholee/study/react-netfilx/src/components/Row.js":"8","/Users/hyeonholee/study/react-netfilx/src/components/Footer.js":"9","/Users/hyeonholee/study/react-netfilx/src/components/MovieModal/index.js":"10","/Users/hyeonholee/study/react-netfilx/src/pages/MainPage/index.js":"11","/Users/hyeonholee/study/react-netfilx/src/pages/DetailPage/index.js":"12","/Users/hyeonholee/study/react-netfilx/src/pages/SearchPage/index.js":"13","/Users/hyeonholee/study/react-netfilx/src/hooks/useDebounce.js":"14","/Users/hyeonholee/study/react-netfilx/src/hooks/useOnClickOutside.js":"15"},{"size":592,"mtime":1669630080877,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1669116868980,"results":"18","hashOfConfig":"17"},{"size":760,"mtime":1669533456604,"results":"19","hashOfConfig":"17"},{"size":1801,"mtime":1669534451470,"results":"20","hashOfConfig":"17"},{"size":3518,"mtime":1669464013832,"results":"21","hashOfConfig":"17"},{"size":525,"mtime":1669458406247,"results":"22","hashOfConfig":"17"},{"size":221,"mtime":1669629809136,"results":"23","hashOfConfig":"17"},{"size":2792,"mtime":1669536681014,"results":"24","hashOfConfig":"17"},{"size":2231,"mtime":1669531515290,"results":"25","hashOfConfig":"17"},{"size":1319,"mtime":1669533515261,"results":"26","hashOfConfig":"17"},{"size":764,"mtime":1669533843961,"results":"27","hashOfConfig":"17"},{"size":683,"mtime":1669533409954,"results":"28","hashOfConfig":"17"},{"size":2392,"mtime":1669535257608,"results":"29","hashOfConfig":"17"},{"size":366,"mtime":1669533443875,"results":"30","hashOfConfig":"17"},{"size":688,"mtime":1669533443879,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xg3el3",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/hyeonholee/study/react-netfilx/src/index.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/reportWebVitals.js",[],[],[],"/Users/hyeonholee/study/react-netfilx/src/App.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/components/Nav.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/components/Banner.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/api/requests.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/api/axios.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/components/Row.js",["81"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"../api/axios\";\nimport MovieModal from \"./MovieModal\";\nimport \"./Row.css\";\n\n// import Swiper core and required modules\nimport { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/scrollbar\";\n\nexport default function Row({ isLargeRow, title, id, fetchUrl }) {\n  const [movies, setMovies] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [movieSelected, setMovieSelected] = useState({});\n\n  useEffect(() => {\n    fetchMovieData();\n  }, []);\n\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    console.log(\"request\", request);\n    setMovies(request.data.results);\n  };\n\n  const handleClick = (movie) => {\n    setModalOpen(true);\n    setMovieSelected(movie);\n  };\n\n  return (\n    <section className=\"row\">\n      <h2>{title}</h2>\n      <Swiper \n        modules={[Navigation, Pagination, Scrollbar, A11y]}\n        // ko: loop 기능을 사용할 것인지\n        // ja: loop機能使用\n        loop={true} \n        breakpoints={{\n          1378: {\n            // ko: 한번에 보이는 슬라이드 개수\n            // ja: 一回みせるslide数\n            slidesPerView: 6,\n            // ko: 몇개씩 슬라이드 할지\n            // ja: 何個slideするのか\n            slidesPerGroup: 6, \n          },\n          998: {\n            slidesPerView: 5,\n            slidesPerGroup: 5,\n          },\n          625: {\n            slidesPerView: 4,\n            slidesPerGroup: 4,\n          },\n          0: {\n            slidesPerView: 3,\n            slidesPerGroup: 3,\n          },\n        }}\n        // ko: arrow 버튼 사용 유무 \n        // ja: arrowボタン使用\n        navigation\n        // ko: 페이지 버튼 보이게 할지 \n        // ja: ページボタンみせる\n        pagination={{ clickable: true }}\n      >\n        <div id={id} className=\"row__posters\">\n          {movies.map((movie) => (\n            <SwiperSlide>\n              <img\n                key={movie.id}\n                style={{ padding: \"25px 0\" }}\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                src={`https://image.tmdb.org/t/p/original/${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                } `}\n                alt={movie.name}\n                onClick={() => handleClick(movie)}\n              />\n            </SwiperSlide>\n          ))}\n        </div>\n      </Swiper>\n\n      {modalOpen && (\n        <MovieModal {...movieSelected} setModalOpen={setModalOpen} />\n      )}\n    </section>\n  );\n}\n","/Users/hyeonholee/study/react-netfilx/src/components/Footer.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/components/MovieModal/index.js",["82"],[],"import React, { useRef, useCallback } from \"react\";\nimport \"./MovieModal.css\";\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\";\n\nfunction MovieModal({\n  backdrop_path,\n  title,\n  overview,\n  name,\n  release_date,\n  first_air_date,\n  vote_average,\n  setModalOpen,\n}) {\n  const ref = useRef();\n\n  useOnClickOutside(ref, () => {\n      setModalOpen(false);\n  });\n\n  return (\n    <div className=\"presentation\">\n      <div className=\"wrapper-modal\">\n        <div className=\"modal\" ref={ref}>\n          <span onClick={() => setModalOpen(false)} className=\"modal-close\">\n            X\n          </span>\n\n          <img\n            className=\"modal__poster-img\"\n            src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\n            alt=\"modal__poster-img\"\n          />\n\n          <div className=\"modal__content\">\n            <p className=\"modal__details\">\n              <span className=\"modal__user_perc\">100% for you</span>{\" \"}\n              {release_date ? release_date : first_air_date}\n            </p>\n\n            <h2 className=\"modal__title\">{title ? title : name}</h2>\n            <p className=\"modal__overview\"> 평점: {vote_average}</p>\n            <p className=\"modal__overview\"> {overview}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieModal;\n","/Users/hyeonholee/study/react-netfilx/src/pages/MainPage/index.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/pages/DetailPage/index.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/pages/SearchPage/index.js",["83"],[],"import React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"../../api/axios\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport \"./SearchPage.css\";\n\nexport default function SearchPage() {\n  const navigate = useNavigate();\n  const [searchResults, setSearchResults] = useState([]);\n\n  const useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n  };\n\n  let query = useQuery();\n  const searchTerm = query.get(\"q\");\n\n  // ko: 포퍼먼스를 위해\n  // ja: フォーファーマンスのため、\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n  // ko: 검색이 바뀔때마다 새로 찾아오기 위해\n  // ja: 検索が変わったら新しい情報取得\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      fetchSearchMovie(debouncedSearchTerm);\n    }\n  }, [debouncedSearchTerm]);\n\n  const fetchSearchMovie = async (searchTerm) => {\n    console.log(\"searchTerm\", searchTerm);\n    try {\n      const request = await axios.get(\n        `/search/multi?include_adult=false&query=${searchTerm}`\n      );\n      console.log(request);\n      setSearchResults(request.data.results);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const renderSearchResults = () => {\n    return searchResults.length > 0 ? (\n      <section className=\"search-container\">\n        {searchResults.map((movie) => {\n          if (movie.backdrop_path !== null && movie.media_type !== \"person\") {\n            const movieImageUrl =\n              \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n            return (\n              <div className=\"movie\" key={movie.id}>\n                <div\n                  onClick={() => navigate(`/${movie.id}`)}\n                  className=\"movie__column-poster\"\n                >\n                  <img\n                    src={movieImageUrl}\n                    alt=\"movie\"\n                    className=\"movie__poster\"\n                  />\n                </div>\n              </div>\n            );\n          }\n        })}\n      </section>\n    ) : (\n      <section className=\"no-results\">\n        <div className=\"no-results__text\">\n          <p>\n            찾고자하는 검색어\"{debouncedSearchTerm}\"에 맞는 영화가 없습니다.\n          </p>\n        </div>\n      </section>\n    );\n  };\n\n  return renderSearchResults();\n}\n","/Users/hyeonholee/study/react-netfilx/src/hooks/useDebounce.js",[],[],"/Users/hyeonholee/study/react-netfilx/src/hooks/useOnClickOutside.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":24,"column":6,"nodeType":"86","endLine":24,"endColumn":8,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":25,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":45,"column":36,"nodeType":"94","messageId":"95","endLine":45,"endColumn":38},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovieData'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"97","fix":"98"},"Update the dependencies array to be: [fetchMovieData]",{"range":"99","text":"100"},[720,722],"[fetchMovieData]"]
{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonholee/study/react-netfilx/src/components/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../api/axios\";\nimport MovieModal from \"./MovieModal\";\nimport \"./Row.css\";\n\n// import Swiper core and required modules\nimport { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/scrollbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(_ref) {\n  _s();\n  let {\n    isLargeRow,\n    title,\n    id,\n    fetchUrl\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [movieSelected, setMovieSelected] = useState({});\n  useEffect(() => {\n    fetchMovieData();\n  }, []);\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    console.log(\"request\", request);\n    setMovies(request.data.results);\n  };\n  const handleClick = movie => {\n    setModalOpen(true);\n    setMovieSelected(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Swiper\n    // install Swiper modules\n    , {\n      modules: [Navigation, Pagination, Scrollbar, A11y],\n      loop: true // loop 기능을 사용할 것인지\n      ,\n      breakpoints: {\n        1378: {\n          slidesPerView: 6,\n          // 한번에 보이는 슬라이드 개수\n          slidesPerGroup: 6 // 몇개씩 슬라이드 할지\n        },\n\n        998: {\n          slidesPerView: 5,\n          slidesPerGroup: 5\n        },\n        625: {\n          slidesPerView: 4,\n          slidesPerGroup: 4\n        },\n        0: {\n          slidesPerView: 3,\n          slidesPerGroup: 3\n        }\n      },\n      navigation: true // arrow 버튼 사용 유무 \n      ,\n      pagination: {\n        clickable: true\n      } // 페이지 버튼 보이게 할지 \n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: id,\n        className: \"row__posters\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              padding: \"25px 0\"\n            },\n            className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n            src: `https://image.tmdb.org/t/p/original/${isLargeRow ? movie.poster_path : movie.backdrop_path} `,\n            alt: movie.name,\n            onClick: () => handleClick(movie)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(MovieModal, {\n      ...movieSelected,\n      setModalOpen: setModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"ARRKMuuqd4hR7xc6n0m8gpcgRM8=\");\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieModal","Navigation","Pagination","Scrollbar","A11y","Swiper","SwiperSlide","Row","isLargeRow","title","id","fetchUrl","movies","setMovies","modalOpen","setModalOpen","movieSelected","setMovieSelected","fetchMovieData","request","get","console","log","data","results","handleClick","movie","slidesPerView","slidesPerGroup","clickable","map","padding","poster_path","backdrop_path","name"],"sources":["/Users/hyeonholee/study/react-netfilx/src/components/Row.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"../api/axios\";\nimport MovieModal from \"./MovieModal\";\nimport \"./Row.css\";\n\n// import Swiper core and required modules\nimport { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/scrollbar\";\n\nexport default function Row({ isLargeRow, title, id, fetchUrl }) {\n  const [movies, setMovies] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [movieSelected, setMovieSelected] = useState({});\n\n  useEffect(() => {\n    fetchMovieData();\n  }, []);\n\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    console.log(\"request\", request);\n    setMovies(request.data.results);\n  };\n\n  const handleClick = (movie) => {\n    setModalOpen(true);\n    setMovieSelected(movie);\n  };\n\n  return (\n    <section className=\"row\">\n      <h2>{title}</h2>\n      <Swiper \n        // install Swiper modules\n        modules={[Navigation, Pagination, Scrollbar, A11y]}\n        loop={true} // loop 기능을 사용할 것인지\n        breakpoints={{\n          1378: {\n            slidesPerView: 6, // 한번에 보이는 슬라이드 개수\n            slidesPerGroup: 6, // 몇개씩 슬라이드 할지\n          },\n          998: {\n            slidesPerView: 5,\n            slidesPerGroup: 5,\n          },\n          625: {\n            slidesPerView: 4,\n            slidesPerGroup: 4,\n          },\n          0: {\n            slidesPerView: 3,\n            slidesPerGroup: 3,\n          },\n        }}\n        navigation  // arrow 버튼 사용 유무 \n        pagination={{ clickable: true }} // 페이지 버튼 보이게 할지 \n      >\n        <div id={id} className=\"row__posters\">\n          {movies.map((movie) => (\n            <SwiperSlide>\n              <img\n                key={movie.id}\n                style={{ padding: \"25px 0\" }}\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                src={`https://image.tmdb.org/t/p/original/${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                } `}\n                alt={movie.name}\n                onClick={() => handleClick(movie)}\n              />\n            </SwiperSlide>\n          ))}\n        </div>\n      </Swiper>\n\n      {modalOpen && (\n        <MovieModal {...movieSelected} setModalOpen={setModalOpen} />\n      )}\n    </section>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}